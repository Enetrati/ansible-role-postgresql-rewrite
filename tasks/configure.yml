---
- name: Configure global settings.
  lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: "^#?{{ item.option }}.+$"
    line: "{{ item.option }} = '{{ item.value }}'"
    state: "{{ item.state | default('present') }}"
    mode: 0644
  with_items: "{{ postgresql_global_config_options }}"
  notify: restart postgresql

- name: Configure host based authentication (if entries are configured).
  template:
    src: "pg_hba.conf.j2"
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0600
  notify: restart postgresql
  when: postgresql_hba_entries | length > 0

- name: Ensure PostgreSQL unix socket dirs exist.
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: "{{ postgresql_unix_socket_directories_mode }}"
  with_items: "{{ postgresql_unix_socket_directories }}"

- name: "Alter log destination from stderr to csvlog"
  command: "{{ item }}"
    loop:
      - psql -U postgres -c "alter system set log_destination='csvlog';"
      - psql -U postgres -c "alter system set log_directory='/var/log/postgres/{{ pg_version }}';"
      - psql -U postgres -c "alter system set log_filename='postgresql-%Y%m%d.log';"
      - psql -U postgres -c "alter system set log_file_mode='0600';"
      - psql -U postgres -c "alter system set log_truncate_on_rotation='on';"
      - psql -U postgres -c "alter system set log_rotation_size='1GB'"
      - psql -U postgres -c "alter system set syslog_facility='LOCAL1';"
      - psql -U postgres -c "alter system set syslog_ident='pg{{ pg_version }}';"
      - psql -U postgres -c "alter system set log_min_messages='warning';"
      - psql -U postgres -c "alter system set log_min_error_statement='error';"
      - psql -U postgres -c "alter system set debug_print_parse='off';"
      - psql -U postgres -c "alter system set debug_print_rewritten='off';"
      - psql -U postgres -c "alter system set debug_print_plan='off';"
      - psql -U postgres -c "alter system set debug_pretty_print='on';"
      - psql -U postgres -c "alter system set log_connections='on';"
      - psql -U postgres -c "alter system set log_disconnections='on';"
      - psql -U postgres -c "alter system set log_error_verbosity='verbose';"
      - psql -U postgres -c "alter system set log_statement='ddl';"
      - psql -U postgres -c "alter system set log_hostname='off';"
      - psql -U postgres -c "alter system set log_line_prefix='%m \[%p\]:\ \[%l-1\]\ db=%d,user=%u,app=%a,client=%h\ ';"
      - psql -U postgres -c "create extension pgcrypto;"
    become: true
    become_user: postgres
- name: "Reload PostgreSQL config"
  shell:  psql -U postgres -c "select pg_reload_conf();"
  become: true
  become_user: postgres
- name: "Show log"
  shell: psql -U postgres -c "alter system set logging_collector = 'on';"
  become: true
  become_user: postgres
- name: "Create \'pg_wheel\' group"
  group:
    name: pg_wheel
    state: present
- name: "Add user \'postgres\' to \'pg_wheel\'"
  user:
    name: postgres
    append: true
    groups: pg_wheel
- name: "Create \'sudoers\' for \'postgres\'"
  lineinfile:
    create: yes
    path: /etc/sudoers.d/postgres
    line: '%pg_wheel ALL= /bin/su - postgres'
    owner: root
    group: root
    mode: 0440
- name: "Create log directory"
  file:
    state: directory
    path: "/var/log/postgres/{{ pg_version }}"
    owner: postgres
    group: postgres
- name: "Restart PostgreSQL"
  service:
    name: "postgresql-{{ pg_version }}"
    state: restarted

